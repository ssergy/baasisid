swagger: '2.0'
info:
  version: 1.0.0
  description: |
    ## BASIS ID integration API
    BASIS ID provides 2 available integration approaches:

    1) Web Widget enables you to embed verification features in your website or
    application

    2) Customer integration using our APIs.

    <br />
    ### 1. Web Widget integration

    Embed the BASIS ID Login button in your registration/authorisation form (like Facebook, Google+ and other social network buttons);
      You are able to find 3 different colour schemes.

    Insert widget code in &lt;head&gt; ... &lt;/head&gt; section on your website:
    ```
    <script type="text/javascript" src="https://api.basisid.com/assets/js/widget.new.js"></script>
    ```
    <br />

    Add widget location on your website after &lt;body&gt; tag:

    ```
    <div id="bas-widget-container" style="min-height: 350px;"> BASIS ID loading...</div>
    ```

    <br />

    Add widget code on the bottom of your page before &lt;/body&gt; tag:

    ```
    <script type="text/javascript">
       window.BAS.AS.initFrame({
           key: "BASISID_API_KEY",
            bas_gw: "https://api.basisid.com/",
            container_id: "bas-widget-container",

            ui: {
                width: "100%",
                height: "108px",
                style: "",
            },

            options: {

            },
            events:{
                onLoad: function(){
                   console.log("BAS AS loaded");
                },

                onManualCheck: function(result) {
                   if (result.status === "ok"){
                      // User data sending success
                      // ... Add Your code here ...
                   } else if (result.status === "canceled") {
                     // User pushed cancel button
                   }
                },
            }
        });
    </script>
    ```
    <br />

    **Widget settings:**

    Replace BASISID_API_KEY with the BASIS ID API Key.

    You can find the Key in your CRM profile;


    You have to configure the data transfer using Widget method: **onManualCheck**;


    **onManualCheck** - the method is called by Widget in case of successful  / unsuccessful end of the user registration via Widget.

    You will receive object called "result".


    If user successfully registered, result looks like:

     ```
     {status: 'ok', user_hash: 'XXXXXXXXXXX'}
     ```

      In case if registration has been canceled:


    ```
    {status: 'canceled'}
    ```

    The values of "result" object:
     * status - request status;
     * user_hash - unique string user ID;


    If you receive a successful "result" object, you can send a request to your server and execute a BASIS ID server API request from the **server**:


      (see "Check data / Get user profile information" in this API doc)

    ```
    /users/info/{id}/{api_key}/{signature}
    ```


    For request to Your server in javascript you can use ajax query jquery library (jquery.com)

    ```
    function check_result(result) {
      $.get('https://your-own-server.com/?hash='+result.user_hash,
      function(data) {
      ...
      });
    }
    ```

    or redirect to Your server page

    ```
    document.location.href='https://your-own-server.com/?hash='+result.user_hash;

    ```

    <br />
    <br />

    ### 2. API integration

    **The order of terminal operations with API:**


    1) Call method: /base-check


    Using the method, you send basic user parameters


    2) * OPTIONAL - Call for One-Time-Password /send-sms


    3) * OPTIONAL - SMS code received from the user is sent to /check-sms-code


    4) * OPTIONAL -  Photo of the user document is sent to /send-document


    (2 requests in the case of a two-sided document - ID card)


    5) * OPTIONAL -  Send user's video (selfie) to /send-video  or user's photo to /send-image

    6) * OPTIONAL - Send user's bank statement to /send-statement

    7) Status callbacks

    <br />
    <br />
    ### Status callbacks

    **Final status callback**


    Callback is being sent if a user’s status is changed to ‘approved’ or ‘declined’.
    In case of post moderation, callback is only being sent when your company performs double check on the client.

    To enable callback, please install Callback Url in CRM settings.

    An example of callback request:
    ```
      {"user_id":2027,
       "user_hash":"27c5728a-7130-408d-b0a1-d55ed8ae7b2f",
       "status":11,
       "signature":"7ca05937a0e5c42147be2aa23ffad87e80bd866e1ff7950ec6841d4d87d844fe",
       "autocheck_bad_reasons":""
       }
    ```

    * user_id - user’s ID
    * user_hash - user’s unique hash
    * status - user’s status (10 - user is confirmed; 11 - user is declined)
    * autocheck_bad_reasons - the reason for the request to be automatically declined
    * signature - signature of the request

    Your request is signed as BASIS_API_SECRET2 (can be found in CRM settings)
    To create a signature you need to get sha256 hash from concatenation of the following line:

    ```
    BASIS_API_SECRET2+user_id+user_hash+status+autocheck_bad_reasons
    ```

    Java signature example:
    ```
    String sign256hex = org.apache.commons.codec.digest.DigestUtils.sha256Hex(BASIS_API_SECRET2 + user_id + user_hash + status + autocheck_bad_reasons);
    if (sign256hex.equals(signature)) {
        // Signed ...
    }
    ```

    PHP signature example:
    ```
    $signature = hash('sha256', BASIS_API_SECRET2 . $inp['user_id'] . $inp['user_hash'] . $inp['status'] . $inp['autocheck_bad_reasons']);
    if ($signature == $inp['signature']) {

    }
    ```

    In response to callback you have to send the status “200OK” with any text, for example, “OK”.

    If a response has not been received or it did not contain “200OK”, the system stops sending requests for 3 minutes.
    After 3 minutes it retries to send a request.  And so on.


    **The reasons for the request to be automatically declined**

    You can have one reason or many comma separated reasons in "autocheck_bad_reasons" field:

    * pep - politically exposed person
    * The reasons for the request to be automatically declinedlaw enforcement
    * regulatory enforcement
    * other bodies
    * sanctions  - government etc sanctions

    * black_list - A person with the same name is mentioned in sanction lists.
    * card - Credit card is not valid (problem with cc check)
    * video - The passport/ID picture and face on the video are not similar. No match in facial recognition.
    * mrz - The first name/surname/middle name/date of birth do not match with passport's machine readable zone (MRZ). Or  document is not valid.

    <br />
    <br />


    **"Requested" statatus callback**

    Callback is being sent if a user’s status is changed to ‘requested’.

    By default, this functionality is disabled.
    BASIS ID sends requests to the user directly to the email.
    Contact BASIS ID support (support@basisid.com) if you need this functionality.

    An example of callback request:

    ```
    {
      "callback_type": "request",
      "user_id":2027,
      "user_hash":"27c5728a-7130-408d-b0a1-d55ed8ae7b2f",
      "status":3,
      "signature":"7ca05937a0e5c42147be2aa23ffad87e80bd866e1ff7950ec6841d4d87d844fe",
      "reason": "0,5",
      "request": "1,2",
      "message": "Request message",
    }
    ```

    * user_id - user’s ID
    * user_hash - user’s unique hash
    * status - user’s status (3 - user was requested)
    * autocheck_bad_reasons - the reason for the request to be automatically declined
    * signature - signature of the request
    * reason - list of request reasons separated with ','.

    0 - No required data
    1 - Data has mistakes
    2 - Email not confirmed
    3 - Bad photo quality
    4 - No required photos
    5 - No MRZ zone on document photos
    6 - Bad video quality
    7 - Bad utility bill photo
    8 - Utility bill is old
    9 - Social accounts are not relevant
    10 - Bad quality of latest pay slip photo
    11 - Pay slip is old

    * request - list of requested fields separated with ','.

    0 - Name
    1 - Gender
    2 - Birthday
    3 - Country of Nationality
    4 - Full Address
    5 - Phone
    6 - E-mail
    7 - Passport/ID card photo
    8 - Client photo
    9 - Video
    10 - Utility bill
    11 - Social networks accounts
    12 - Latest pay slip

    * message - request message

    Your request is signed as BASIS_API_SECRET2 (can be found in CRM settings)
    To create a signature you need to get sha256 hash from concatenation of the following line:

    ```
    BASIS_API_SECRET2+user_id+user_hash+status+reason+request+message
    ```
    <br />
    <br />

  title: BASIS ID API
tags:
  - name: send data
  - name: receive data
consumes:
  - application/json
produces:
  - application/json
host: api.basisid.com
basePath: /
paths:
  /auth/base-check:
    post:
      tags:
        - send data
      summary: Registration start - send basic data
      description: >-
        The first step of registering a new user, sending basic data about user
        to server
      operationId: base-check
      parameters:
        - name: key
          in: query
          required: true
          type: string
          description: BASIS ID API KEY (from panel)
          x-example: prod-pHmeBukoXXXXXpXFjOhvjmrXxwwbtZOn
        - name: first_name
          in: query
          required: true
          type: string
          description: User first name
          x-example: John
        - name: last_name
          in: query
          required: true
          type: string
          description: User last name
          x-example: Doe
        - name: middle_name
          in: query
          required: false
          type: string
          description: User middle name
          x-example: Young
        - name: email
          in: query
          required: true
          type: string
          description: User e-mail address
          x-example: test123@testmail.com
        - name: phone
          in: query
          required: true
          type: string
          description: >-
            The phone number of the user in the following format [country
            code]-[phone number]
          x-example: 7-9181234567
        - name: phone2
          in: query
          required: false
          type: string
          description: >-
            Additional phone number of the user in the following format [country
            code]-[phone number]
          x-example: 7-9181234567
        - name: gender
          in: query
          required: false
          type: number
          description: 'Gender, 0 - male, 1 - female, 2 - other'
          x-example: 0
        - name: birthday_day
          in: query
          required: true
          type: string
          description: 'User birthday day (valid day number, 1-31)'
        - name: birthday_month
          in: query
          required: true
          type: string
          description: User birthday month number (1 - January .. 12 - December)
        - name: birthday_year
          in: query
          required: true
          type: string
          description: 'User birthday year, valid year number, from 1917 to current year'
        - name: country_nationality
          in: query
          required: true
          type: string
          description: 'Country of citizenship, iso2 code'
        - name: country_residence
          in: query
          required: false
          type: string
          description: 'Country of residence, iso2 code'
        - name: city
          in: query
          required: false
          type: string
          description: City
        - name: address
          in: query
          required: false
          type: string
          description: Address
        - name: address2
          in: query
          required: false
          type: string
          description: Aditional address
        - name: zip
          in: query
          required: false
          type: string
          description: Index
        - name: user_hash
          in: query
          required: false
          type: string
          description: User hash, for edit profile (received in the /base-check previous request)
        - name: check_id
          in: query
          required: false
          type: string
          description: Unique registration ID, for edit profile (user_id, received in the /base-check previous request)
      responses:
        '200':
          description: Status 200
          schema:
            required:
              - status
              - user_id
              - user_hash
              - api_refresh_token
            type: object
            properties:
              status:
                type: string
                description: Request status
                example: ok
              user_id:
                type: number
                description: Unique user ID
              user_hash:
                type: string
                description: Unique user hash
                example: 9146288d95b60ffa6d043ed7c9b8cf07bd1edaf7
              errors:
                type: array
                description: >-
                  Error values (for status: bad)

                    "error:key" -  API_KEY is not specified

                    "empty:first_name" -  first name is not specified

                    "empty:last_name" - last name is not specified

                    "empty:phone" - phone number is not specified

                    "empty:email" - e-mail is not specified

                    "empty:birthday_day" - date of birth error

                    "empty:birthday_month" - month of birth error

                    "empty:birthday_year" - year of birth error

                    "user:exists" -  user with this e-mail/phone number already exists"
          examples:
            application/json:
              status: ok
              userHash: c3732a00d5e297ba5a83504dfe1f2cdb310d0f80
              checkId: 890
        '400':
          description: >-
            Bad request - input error (could not parse the JSON input request)
        '500':
          description: >-
            Internal Server Error - problem with processing data on server.
            Please, contact with support team - support@basisid.com
      x-code-samples:
        - lang: Curl
          source: |
            curl \
                -H "Content-Type: application/json" \
                -X POST -d '{"key": "API_KEY", "first_name": "John", "last_name": "Doe", "middle_name": "", "email": "johndoe777@testdemo.com", "phone": "+79998885566", "phone2": "", "gender": 0, "birthday_day": "01", "birthday_month": "07", "birthday_year": "1983", "country_nationality": "SG", "country_residence": "SG", "city": "Singapore", "address": "Last Street, 19-99", "zip": "54321"}' \
                https://api.basisid.com/auth/base-check
  /auth/send-sms:
    post:
      tags:
        - send data
      summary: OTP sms request (optional)
      description: Sending SMS to the user to confirm a phone number
      operationId: send-sms
      parameters:
        - name: user_hash
          in: query
          required: true
          type: string
          description: User hash (received in the /base-check step)
        - name: check_id
          in: query
          required: true
          type: string
          description: Unique registration ID (user_id, received in the /base-check step)
      responses:
        '200':
          description: Status 200
          schema:
            required:
              - phone
              - status
            type: object
            properties:
              status:
                type: string
                description: >-
                  Request status. Values: ok, bad
                example: ok
              phone:
                type: string
                description: >-
                  The phone number of the user in the following format [country
                  code]-[phone number]
                example: 1-2345678900
              errors:
                type: array
                description: >-
                  Error values (for status: bad)

                  empty:user_hash - no user_hash

                  empty:check_id - no check_id
          examples:
            application/json:
              status: ok
              phone: 1-2345678900
        '400':
          description: >-
            Bad request - input error (could not parse the JSON input request)
        '500':
          description: >-
            Internal Server Error - problem with processing data on server
            Please, contact with support team - support@basisid.com
      x-code-samples:
        - lang: Curl
          source: |
            curl \
                -H "Content-Type: application/json" \
                -X POST -d '{"user_hash": "c3732a00d5e297ba5a83504dfe1f2cdb310d0f80", "check_id": 890}' \
                https://api.basisid.com/auth/send-sms
  /auth/check-sms-code:
    post:
      tags:
        - send data
      summary: Checking the OTP (SMS) code  (optional)
      description: OTP (SMS) code checking
      operationId: check-sms-code
      parameters:
        - name: user_hash
          in: query
          required: true
          type: string
          description: User hash (received in the /base-check step)
        - name: check_id
          in: query
          required: true
          type: string
          description: User registration ID (user_id, received in the /base-check step)
        - name: phone
          in: query
          required: true
          type: string
          description: >-
            The phone number of the user in the following format [country
            code]-[phone number]
          x-example: 7-9181234567
        - name: code
          in: query
          required: true
          type: string
          description: Verification code (OTP code) received in SMS
          x-example: '12345'
      responses:
        '200':
          description: Status 200
          schema:
            required:
              - phone
              - status
            type: object
            properties:
              status:
                type: string
                description: >-
                  Request status. Values: ok, bad
                example: ok
              phone:
                type: string
                description: >-
                  The phone number of the user in the following format [country
                  code]-[phone number]
                example: 1-2345678900
              errors:
                type: array
                description: >-
                  Error values (for status: bad)
                items:
                  description: >-
                    empty:code - wrong or empty OTP code from SMS
                    empty:user_hash - no user_hash
                    empty:check_id - no check_id
          examples:
            application/json:
              status: ok
              phone: 1-2345678900
        '400':
          description: >-
            Bad request - input error (could not parse the JSON input request)
        '500':
          description: >-
            Internal Server Error - problem with processing data on server
            Please, contact with support team - support@basisid.com
      x-code-samples:
        - lang: Curl
          source: |
            curl \
                -H "Content-Type: application/json" \
                -X POST -d '{"user_hash": "c3732a00d5e297ba5a83504dfe1f2cdb310d0f80", "check_id": 890, "phone": "1-2345678900", "code": "5555"}' \
                https://api.basisid.com/auth/check-sms-code
  /auth/send-document:
    post:
      tags:
        - send data
      summary: Upload documents to server  (optional)
      description: Upload user passport or ID card (2 side photo) on the server
      operationId: send-document
      consumes:
        - multipart/form-data
      parameters:
        - name: user_hash
          in: query
          required: true
          type: string
          description: User hash (received in the /base-check step)
        - name: check_id
          in: query
          required: true
          type: string
          description: User registration ID (user_id, received in the /base-check step)
        - name: file
          in: formData
          required: true
          type: file
          format: binary
          description: Image file (jpg/jpeg/png/gif/tiff)
        - name: step
          in: query
          required: false
          type: string
          description: >-
            Document side numeration. "1" by default. For second side of ID card
            specify "2".
      responses:
        '200':
          description: Status 200
          schema:
            required:
              - status
            type: object
            properties:
              status:
                type: string
                description: Upload status
                example: ok
          examples:
            application/json:
              status: ok
        '400':
          description: input data error
        '404':
          description: wrong check_id OR user_hash values
        '500':
          description: >-
            Internal Server Error - problem with processing data on server.
            Please, contact with support team - support@basisid.com
      x-code-samples:
        - lang: Curl
          source: |
            curl \
              -F "user_hash=c3732a00d5e297ba5a83504dfe1f2cdb310d0f80" \
              -F "check_id=890" \
              -F "step=1" \
              -F "file=@/path/to/img.jpg" \
            https://api.basisid.com/auth/send-document
  /auth/send-video:
    post:
      tags:
        - send data
      summary: Upload video to server  (optional)
      description: Upload user video to server
      operationId: send-video
      consumes:
        - multipart/form-data
      parameters:
        - name: user_hash
          in: query
          required: true
          type: string
          description: User hash (received in the /base-check step)
        - name: check_id
          in: query
          required: true
          type: string
          description: User registration ID (user_id, received in the /base-check step)
        - name: file
          in: formData
          required: true
          type: file
          format: binary
          description: Video recording file (mp4/avi/fla/mov/wmv/m3u8/ts/3gp/mpeg)
      responses:
        '200':
          description: Status 200
          schema:
            required:
              - status
            type: object
            properties:
              status:
                type: string
                description: Upload status
                example: ok
          examples:
            application/json:
              status: ok
        '400':
          description: input data error
        '404':
          description: wrong check_id OR user_hash values
        '500':
          description: >-
            Internal Server Error - problem with processing data on server.
            Please, contact with support team - support@basisid.com
      x-code-samples:
        - lang: Curl
          source: |
            curl \
              -F "user_hash=c3732a00d5e297ba5a83504dfe1f2cdb310d0f80" \
              -F "check_id=890" \
              -F "file=@/path/to/mov.MOV" \
            https://api.basisid.com/auth/send-video
  /auth/send-image:
    post:
      tags:
        - send data
      summary: Upload photo to server. Instead of video.  (optional)
      description: Upload user photo to server
      operationId: send-image
      consumes:
        - multipart/form-data
      parameters:
        - name: user_hash
          in: query
          required: true
          type: string
          description: User hash (received in the /base-check step)
        - name: check_id
          in: query
          required: true
          type: string
          description: User registration ID (user_id, received in the /base-check step)
        - name: file
          in: formData
          required: true
          type: file
          format: binary
          description: Image file (jpg/jpeg/png/gif/tiff)
      responses:
        '200':
          description: Status 200
          schema:
            required:
              - status
            type: object
            properties:
              status:
                type: string
                description: Upload status
                example: ok
          examples:
            application/json:
              status: ok
        '400':
          description: input data error
        '404':
          description: wrong check_id OR user_hash values
        '500':
          description: >-
            Internal Server Error - problem with processing data on server.
            Please, contact with support team - support@basisid.com
      x-code-samples:
        - lang: Curl
          source: |
            curl \
              -F "user_hash=c3732a00d5e297ba5a83504dfe1f2cdb310d0f80" \
              -F "check_id=890" \
              -F "file=@/path/to/image.jpg" \
            https://api.basisid.com/auth/send-image
  /auth/send-statement:
    post:
      tags:
        - send data
      summary: Upload bank statement to server
      description: Upload bank statement on the server
      consumes:
        - multipart/form-data
      parameters:
        - name: user_hash
          in: query
          required: true
          type: string
          description: User hash (received in the /base-check step)
        - name: check_id
          in: query
          required: true
          type: string
          description: User registration ID (user_id, received in the /base-check step)
        - name: file
          in: formData
          required: true
          type: file
          format: binary
          description: Image file (jpg/jpeg/png/gif/tiff/pdf)
      responses:
        '200':
          description: Status 200
          schema:
            required:
              - status
            type: object
            properties:
              status:
                type: string
                description: Upload status
                example: ok
          examples:
            application/json:
              status: ok
        '400':
          description: input data error
        '404':
          description: wrong check_id OR user_hash values
        '500':
          description: >-
            Internal Server Error - problem with processing data on server.
            Please, contact with support team - support@basisid.com
      x-code-samples:
        - lang: Curl
          source: |
            curl \
              -F "user_hash=c3732a00d5e297ba5a83504dfe1f2cdb310d0f80" \
              -F "check_id=890" \
              -F "file=@/path/to/image.jpg" \
            https://api.basisid.com/auth/send-statement
  /auth/send-pay-slip:
    post:
      tags:
        - send data
      summary: Upload pay slip to server
      description: Upload pay slip on the server
      consumes:
        - multipart/form-data
      parameters:
        - name: user_hash
          in: query
          required: true
          type: string
          description: User hash (received in the /base-check step)
        - name: check_id
          in: query
          required: true
          type: string
          description: User registration ID (user_id, received in the /base-check step)
        - name: file
          in: formData
          required: true
          type: file
          format: binary
          description: Image file (jpg/jpeg/png/gif/tiff/pdf)
      responses:
        '200':
          description: Status 200
          schema:
            required:
              - status
            type: object
            properties:
              status:
                type: string
                description: Upload status
                example: ok
          examples:
            application/json:
              status: ok
        '400':
          description: input data error
        '404':
          description: wrong check_id OR user_hash values
        '500':
          description: >-
            Internal Server Error - problem with processing data on server.
            Please, contact with support team - support@basisid.com
      x-code-samples:
        - lang: Curl
          source: |
            curl \
              -F "user_hash=c3732a00d5e297ba5a83504dfe1f2cdb310d0f80" \
              -F "check_id=890" \
              -F "file=@/path/to/image.jpg" \
            https://api.basisid.com/auth/send-pay-slip

  /users/info/{id}/{api_key}/{signature}:
    get:
      tags:
        - receive data
      summary: Get user profile information
      description: >-
        Returns user profile information for defined company.
      operationId: get-user-info
      parameters:
        - name: id
          in: path
          required: true
          type: string
          description: user_hash or email
          x-example: b84caa8cb9097361b89509c7395be1e7f7743442 | email@example.com
        - name: api_key
          in: path
          required: true
          type: string
          description: Company ApiKey
          x-example: prod-d67b6cd3-7255-4203-b351-3bd26233dcc8
        - name: signature
          in: path
          required: true
          type: string
          description: Request sha256 signature. Calculated as sha256(id+BASIS_API_SECRET2)
          x-example: 9f86d081884c7d659a2feaa0c55ad015a3bf4f1b2b0b822cd15d6c15b0f00a08
      responses:
        '200':
          description: Status 200
          schema:
            required:
              - status
              - profile
              - user_status
              - basis_status
              - autocheck_status
            type: object
            properties:
              status:
                type: string
                description: >-
                  Request status
                  "ok" - No errors found.

                  Error statuses:
                  "company_not_found" -  company not found.
                  "wrong_signature" -  wrong signature
                  "user_not_found" - user with defined user hash or email not found
                example: ok
              user_status:
                type: number
                description: User status
                example: 10
              basis_status:
                type: number
                description: BASIS ID status
                example: 11
              autocheck_status:
                type: number
                description: User profile auto verification status
                example: 0
              profile:
                type: object
                properties:
                  id:
                    type: string
                    description: user uniq id
                  user_hash:
                    type: string
                    description: user hash
                  first_name:
                    type: string
                    description: first name
                  last_name:
                    type: string
                    description: last name
                  middle_name:
                    type: string
                    description: middle name
                  email:
                    type: string
                    description: email address
                  email_confirmed:
                    type: bool
                    description: email address confirmed flag
                  phone:
                    type: string
                    description: phone number
                  phone2:
                    type: string
                    description: additional phone number
                  gender:
                    type: string
                    description: gender
                  address:
                    type: string
                    description: address line1
                  address2:
                    type: string
                    description: address line2
                  autocheck_bad_reasons:
                    type: string
                    description: the reason for the request to be automatically declined
                  birthday:
                    type: string
                    description: date of birth, YYYY-MM-DD
                  city:
                    type: string
                    description: city
                  country:
                    type: string
                    description: country code, ISO2
                  country_residence:
                    type: string
                    description: residence country code, ISO2
                  zip:
                    type: string
                    description: post code

          examples:
            application/json:
              status: "ok"
              profile:
                id: "9142"
                user_hash: "222fc57c643d5dd86bb473ee729a52c95476fea3"
                address: ""
                address2: ""
                autocheck_bad_reasons: ""
                birthday: "1990-07-14"
                city: ""
                country: "ee"
                country_residence: ""
                email: "john@smith.com"
                email_confirmed: "true"
                first_name: "John"
                last_name: "Smith"
                gender: "male"
                middle_name: ""
                phone: "110011212"
                phone2: ""
                zip: ""
              user_status: 11
              basis_status: 10
              autocheck_status: 0
        '400':
          description: >-
            Bad request - input error (could not parse the JSON input request)
        '500':
          description: >-
            Internal Server Error - problem with processing data on server.
            Please, contact with support team - support@basisid.com
      x-code-samples:
        - lang: Curl
          source: |
            curl https://api.basisid.com/users/info/email@example.com/d67b6cd3-7255-4203-b351-3bd26233dcc8/a956bd8dceff54384a065dc6ec183ddf52302e4613e634769cfeebfdc87c1677

  /users/status/{id}/{api_key}/{signature}:
    post:
      tags:
        - send data
      summary: Update user status
      description: >-
        Updates user status for this company.
      operationId: update-user-status
      parameters:
        - name: id
          in: path
          required: true
          type: string
          description: user_hash
          x-example: b84caa8cb9097361b89509c7395be1e7f7743442
        - name: api_key
          in: path
          required: true
          type: string
          description: Company ApiKey
          x-example: prod-d67b6cd3-7255-4203-b351-3bd26233dcc8
        - name: signature
          in: path
          required: true
          type: string
          description: Request sha256 signature. Calculated as sha256(id + BASIS_API_SECRET2)
          x-example: 9f86d081884c7d659a2feaa0c55ad015a3bf4f1b2b0b822cd15d6c15b0f00a08
        - name: status
          in: query
          required: true
          type: number
          description: New user status. 3 - Requested, 10 - Approved, 11 - Declined
          enum: [3,10,11]
          x-example: 10
        - name: message
          in: query
          type: string
          description: message for user
        - name: reason
          in: query
          type: number
          enum: [0,1,2,3]
          description: >-
            Decline reason. Only for status = 11 (Declined)
            Values: "Wrong data" = 0, "Wrong photos" = 1, "Fake documents" = 2, "Other" = 3
          x-example: 0
        - name: reasons
          in: query
          type: string
          x-example: 1,5,9
          description: >-
            Only for status = 3 (Requested)
            List of request reasons separated with ','.
            'No required data' = 0,
            'Data has mistakes' = 1,
            'Email not confirmed' = 2,
            'Bad photo quality' = 3,
            'No required photos' = 4,
            'No MRZ zone on document photos' = 5,
            'Bad video quality' = 6,
            'Bad utility bill photo' = 7,
            'Utility bill is old' = 8,
            'Social accounts are not relevant' = 9,
            'Bad quality of latest pay slip photo' = 10,
            'Pay slip is old' = 11
        - name: requests
          in: query
          type: string
          x-example: 2,3,6
          description: >-
            Only for status = 3 (Requested)
            List of requested fields separated with ','.
            'Name' = 0,
            'Gender' = 1,
            'Birthday' = 2,
            'Country of Nationality' = 3,
            'Full Address' = 4,
            'Phone' = 5,
            'E-mail' = 6,
            'Passport/ID card photo' = 7,
            'Client photo' = 8,
            'Video' = 9,
            'Utility bill' = 10,
            'Social networks accounts' = 11,
            'Latest pay slip' = 12
      responses:
        '200':
          description: Status 200
          schema:
            required:
              - status
            type: object
            properties:
              status:
                type: string
                description: >-
                  Request status
                  "ok" - No errors found.

                  Error statuses:
                  "company_not_found" -  company not found.
                  "wrong_signature" -  wrong signature
                  "wrong_status" - wrong status
                  "user_not_found" - user with defined user hash not found
                  "empty_reason" - empty reason
                  "empty_request" - empty request
                  "unknown_reason" - unknown reason
                  "unknown_request" - unknown request
              message:
                type: string
                description: >-
                  error message, for "unknown_reason" and "unknown_request" - wrong reason or request number

          examples:
            application/json:
              status: "ok"
        '400':
          description: >-
            Bad request - input error (could not parse the JSON input request)
        '500':
          description: >-
            Internal Server Error - problem with processing data on server.
            Please, contact with support team - support@basisid.com
      x-code-samples:
        - lang: Curl
          source: |
            curl \
              -H "Content-Type: application/json" \
              -X POST -d '{"status": 3, "message": "some message content", "reason": 2}' \
              https://api.basisid.com/users/status/54384a065dc6ec183ddf52302e461/d67b6cd3-7255-4203-b351-3bd26233dcc8/a956bd8dceff54384a065dc6ec183ddf52302e4613e634769cfeebfdc87c1677
